@model PagedList.IPagedList<AspNetMvc_EFCodeFirst.Models.Student>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "学生列表";
}

<h2>学生列表</h2>

<p>
    @Html.ActionLink("创建", "Create")
</p>
@using (Html.BeginForm("Index", "Student", FormMethod.Get))
{
    <div class="row">
        <div class="col-lg-4">
            <div class="input-group">
                <div class="input-group-btn">
                    <h5>姓名:&nbsp;&nbsp;&nbsp;</h5>
                </div>
                <div class="input-group-btn" style="width:200px">
                    @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, "", new { @class = "form-control" })
                </div>
                <div class="input-group-btn">
                    <input type="submit" value="查找" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("姓氏", "Index", new { sortOrder = ViewBag.NameSortParm })
        </th>
        <th>
            名字
        </th>
        <th>
            @Html.ActionLink("入学日期", "Index", new { sortOrder = ViewBag.DateSortParm })
        </th>
        <th>
            操作
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstMidName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EnrollmentDate)
            </td>
            <td>
                @Html.ActionLink("编辑", "Edit", new { id = item.ID }) |
                @Html.ActionLink("详情", "Details", new { id = item.ID }) |
                @Html.ActionLink("删除", "Delete", new { id = item.ID })
            </td>
        </tr>
    }

</table>
<br />
            Page @(Model.PageCount < Model.PageNumber?0:Model.PageNumber) of @Model.PageCount
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
